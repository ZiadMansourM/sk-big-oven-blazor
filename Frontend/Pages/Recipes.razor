@page "/recipes"
@inject HttpClient http
@inject ILocalStorageService localStorage
@inject NavigationManager navManager

<PageTitle>Recipes</PageTitle>

<div class="row">
    <div class="col">
        <h2 class="text-start ps-4">Recipes</h2>
    </div>
    <div class="col text-end">
        <button class="btn" data-bs-toggle="modal" data-bs-target="#createRecipeModel">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus-circle" viewBox="0 0 16 16">
                <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z" />
                <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z" />
            </svg>
            Add New
        </button>
    </div>
</div>
<hr />
<br />
<div class="table-responsive">
    <table class="table">
        <thead>
            <tr class="d-flex">
                <th class="col-1" scope="col">#</th>
                <th class="col-6 col-md-8 col-lg-8" scope="col">Name</th>
                <th class="col-5 col-md-3 col-lg-3" scope="col">Actions</th>
            </tr>
        </thead>
        <tbody>
            @{ int i = 1;}
            @foreach (var recipe in _recipes)
            {
                <tr class="d-flex">
                    <th class="col-1" scope="row">@i</th>
                    <td class="col-6 col-md-8 col-lg-8 ellipses"><a data-bs-toggle="modal" data-bs-target="#detailRecipeModel">@recipe.Name</a></td>
                    <td class="col-5 col-md-3 col-lg-3">
                        <button @onclick="() => { _activeRecipe.Id = recipe.Id; _activeRecipe.Name = recipe.Name; _activeRecipe.Ingredients = recipe.Ingredients; _activeRecipe.Instructions = recipe.Instructions; _activeRecipe.CategoriesIds = recipe.CategoriesIds; }" class="btn btn-link link" data-bs-toggle="modal" data-bs-target="#updateRecipeModel">
                            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="black" class="bi bi-pencil" viewBox="0 0 16 16">
                                <path d="M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168l10-10zM11.207 2.5 13.5 4.793 14.793 3.5 12.5 1.207 11.207 2.5zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293l6.5-6.5zm-9.761 5.175-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325z" />
                            </svg>
                        </button>
                        <button @onclick="() => { _activeRecipe.Id = recipe.Id; _activeRecipe.Name = recipe.Name; _activeRecipe.Ingredients = recipe.Ingredients; _activeRecipe.Instructions = recipe.Instructions; _activeRecipe.CategoriesIds = recipe.CategoriesIds; }" data-bs-toggle="modal" data-bs-target="#deleteRecipeModel" class="btn btn-link link">
                            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="black" class="bi bi-trash3" viewBox="0 0 16 16">
                                <path d="M6.5 1h3a.5.5 0 0 1 .5.5v1H6v-1a.5.5 0 0 1 .5-.5ZM11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3A1.5 1.5 0 0 0 5 1.5v1H2.506a.58.58 0 0 0-.01 0H1.5a.5.5 0 0 0 0 1h.538l.853 10.66A2 2 0 0 0 4.885 16h6.23a2 2 0 0 0 1.994-1.84l.853-10.66h.538a.5.5 0 0 0 0-1h-.995a.59.59 0 0 0-.01 0H11Zm1.958 1-.846 10.58a1 1 0 0 1-.997.92h-6.23a1 1 0 0 1-.997-.92L3.042 3.5h9.916Zm-7.487 1a.5.5 0 0 1 .528.47l.5 8.5a.5.5 0 0 1-.998.06L5 5.03a.5.5 0 0 1 .47-.53Zm5.058 0a.5.5 0 0 1 .47.53l-.5 8.5a.5.5 0 1 1-.998-.06l.5-8.5a.5.5 0 0 1 .528-.47ZM8 4.5a.5.5 0 0 1 .5.5v8.5a.5.5 0 0 1-1 0V5a.5.5 0 0 1 .5-.5Z" />
                            </svg>
                        </button>
                    </td>
                </tr>
                i++;
            }
        </tbody>
    </table>
</div>

<!-- Update Modal -->
<div class="modal fade custom-model" id="updateRecipeModel" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="updateRecipeModel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-xl">
        <div class="modal-content">
            <EditForm Model="@_activeRecipe" OnValidSubmit="@UpdateRecipe">
                <div class="modal-header">
                    <h5 class="modal-title" id="updateRecipeModel">Recipe Update</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col">
                            <div class="form-floating mb-3">
                                <InputText type="text" @bind-Value="_activeRecipe.Name" class="form-control" id="floatingInputUname" required />
                                <label for="floatingInputUname">Recipe Name</label>
                            </div>
                        </div>
                    </div>
                    <div class="form-floating custom-form-floating">
                        <InputTextArea class="form-control h-100" @bind-Value="ingredients" :rows="activeRecipe.ingredientsLength" id="floatingTextarea2UpdateIng" required>
                        </InputTextArea>
                        <label for="floatingTextarea2UpdateIng">Ingredients</label>
                    </div>
                    <div class="form-floating custom-form-floating">
                        <InputTextArea class="form-control h-100" @bind-Value="instructions" :rows="activeRecipe.instructionsLength" id="floatingTextarea2UpdateIns" required>
                        </InputTextArea>
                        <label for="floatingTextarea2UpdateIns">Instructions</label>
                    </div>
                    @foreach (var cat in _categories)
                    {
                        <div class="form-check form-switch text-start">
                            <input class="form-check-input"
                                   value="@cat.Id"
                                   type="checkbox" />
                            <label class="form-check-label">@cat.Name</label>
                        </div>
                    }
                </div>
                <div class="modal-footer">
                    <button x-on:click="cleanActiveRecipe" type="button" class="btn btn-secondary fw-bold border-white bg-white" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-success fw-bold border-white">Update</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>

<!-- Create Modal -->
<div class="modal fade custom-model" id="createRecipeModel" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="createRecipeModel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-xl">
        <div class="modal-content">
            <EditForm Model="@_activeRecipe" OnValidSubmit="@CreateRecipe">
                <div class="modal-header">
                    <h5 class="modal-title" id="createRecipeModel">Recipe Create</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="col">
                        <div class="form-floating mb-3">
                            <InputText type="text" @bind-Value="_activeRecipe.Name" class="form-control" id="floatingInputCname" required />
                            <label for="floatingInputCname">Recipe Name</label>
                        </div>
                    </div>
                    <div class="form-floating custom-form-floating">
                        <InputTextArea class="form-control h-100" @bind-Value="ingredients" :rows="activeRecipe.ingredientsLength" id="floatingTextarea2CreateIng" required>
                        </InputTextArea>
                        <label for="floatingTextarea2CreateIng">Ingredients</label>
                    </div>
                    <div class="form-floating custom-form-floating">
                        <InputTextArea class="form-control h-100" @bind-Value="instructions" :rows="activeRecipe.instructionsLength" id="floatingTextarea2CreateIns" required>
                        </InputTextArea>
                        <label for="floatingTextarea2CreateIns">Instructions</label>
                    </div>
                    @foreach (var cat in _categories)
                    {
                        <div class="form-check form-switch text-start">
                            <input class="form-check-input"
                                   value="@cat.Id"
                                   type="checkbox" />
                            <label class="form-check-label">@cat.Name</label>
                        </div>
                    }
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary fw-bold" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-success fw-bold">Create</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>

<!-- Delete Modal -->
<div class="modal fade custom-model" id="deleteRecipeModel" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="deleteRecipeModel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <EditForm Model="@_activeRecipe" OnValidSubmit="@DeleteRecipe">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteRecipeModel">Delete Category</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <h3> Confirm deleteing "@_activeRecipe.Name" 👀?</h3>
                    <span class="text-danger">This can't be undone!</span>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary fw-bold" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-danger fw-bold" data-bs-dismiss="modal">Delete</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>

<!-- Detail Modal -->
<div class="modal fade custom-model" id="detailRecipeModel" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="detailRecipeModel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="detailRecipeModel">Recipe Details</h5>
                <button type="button" x-on:click="cleanActiveRecipe" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col">
                        <div class="form-floating mb-3">
                            <input type="text" class="form-control" id="floatingInputDname" value="@_activeRecipe.Name" readonly>
                            <label for="floatingInputDname">Recipe Name</label>
                        </div>
                    </div>
                    <div class="col">
                        <div class="form-floating mb-3">
                            <input type="text" class="form-control" id="floatingInputDguid" value="@_activeRecipe.Id" readonly>
                            <label for="floatingInputDguid">Recipe Guid</label>
                        </div>
                    </div>
                </div>
                <div class="form-floating custom-form-floating">
                    <textarea class="form-control h-100" value="@_activeRecipe.Ingredients" :rows="activeRecipe.ingredientsLength" id="floatingTextarea2DetailIng" readonly>
                        </textarea>
                    <label for="floatingTextarea2DetailIng">Ingredients</label>
                </div>
                <div class="form-floating custom-form-floating">
                    <textarea class="form-control h-100" value="@_activeRecipe.Instructions" :rows="activeRecipe.instructionsLength" id="floatingTextarea2DetailIns" readonly>
                        </textarea>
                    <label for="floatingTextarea2DetailIns">Instructions</label>
                </div>
                <div class="form-floating custom-form-floating">
                    <textarea class="form-control h-100" value="@_activeRecipe.CategoriesIds" :rows="activeRecipe.categoriesIdsLength" id="floatingTextarea2DetailCat" readonly>
                        </textarea>
                    <label for="floatingTextarea2DetailCat">Categories</label>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary fw-bold border-white bg-white" data-bs-dismiss="modal">Great</button>
            </div>
        </div>
    </div>
</div>

@code {
    private string token = string.Empty;
    private string id = string.Empty;

    private List<Models.Recipe> _recipes = new();
    private Models.Recipe _activeRecipe = new();

    private List<Models.Category> _categories = new();

    private string ingredients = string.Empty;
    private string instructions = string.Empty;


    protected override async Task OnInitializedAsync()
    {
        token = await localStorage.GetItemAsStringAsync("token");
        id = await localStorage.GetItemAsStringAsync("userId");
        http.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("bearer", token.Replace("\"", ""));
        var results = await http.GetFromJsonAsync<List<Models.Recipe>>("recipes/");
        if (results != null)
            _recipes = results;
        else
            Console.WriteLine("Wrong request..");
        var secondResults = await http.GetFromJsonAsync<List<Models.Category>>("categories/");
        if (secondResults != null)
            _categories = secondResults;
        else
            Console.WriteLine("Wrong request..");
    }

    private async Task CreateRecipe()
    {
        string[] spearator = { "- ", "\n" };
        _activeRecipe.Ingredients = ingredients.Split(spearator,
            StringSplitOptions.RemoveEmptyEntries).ToList();
        _activeRecipe.Instructions = instructions.Split(spearator,
           StringSplitOptions.RemoveEmptyEntries).ToList();
        foreach (var cat in _categories)
            _activeRecipe.CategoriesIds.Add(cat.Id);
        var response = await http.PostAsJsonAsync("recipes", _activeRecipe);
        string json = await response.Content.ReadAsStringAsync();
        Console.WriteLine(json);
        @*navManager.NavigateTo("/recipes", true);*@
    }

    private async Task DeleteRecipe()
    {
        var response = await http.DeleteAsync($"recipes/{_activeRecipe.Id}");
        navManager.NavigateTo("/recipes", true);
    }

    private async Task UpdateRecipe()
    {
        string[] spearator = { "- ", "\n" };
        _activeRecipe.Ingredients = ingredients.Split(spearator,
            StringSplitOptions.RemoveEmptyEntries).ToList();
        _activeRecipe.Instructions = instructions.Split(spearator,
           StringSplitOptions.RemoveEmptyEntries).ToList();
        foreach (var cat in _categories)
            _activeRecipe.CategoriesIds.Add(cat.Id);
        var response = await http.PutAsJsonAsync(
            $"recipes/{_activeRecipe.Id}",
            _activeRecipe
        );
        navManager.NavigateTo("/recipes", true);
    }
}

